plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.asciidoctor.convert" version "1.5.9.2"
}

dependencies {
    implementation project(":api-controller")
    implementation project(":api-model")
    implementation project(":api-service")
    implementation project(":api-repository")
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

allprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'com.technocorp'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '14'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        imports {
            mavenBom('org.springframework.boot:spring-boot-dependencies:2.4.0')
        }
    }

    dependencies {
        implementation 'io.springfox:springfox-swagger2:2.9.2'
        implementation 'io.springfox:springfox-swagger-ui:2.9.2'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }

}

subprojects {
    dependencies {
        implementation 'org.projectlombok:lombok:1.18.16'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    }
}

project(':api-repository'){
    dependencies {
        implementation project(':api-model')
    }
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}

project(':api-service'){
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
    dependencies {
        implementation project(':api-repository')
        implementation project(':api-model')
    }
}

project(':api-model'){
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}

project(':api-controller'){
    dependencies {
        implementation project(":api-service")
    }

    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}
